/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// BgpRoutingProtocolRequestAllOfExportPolicy Denotes which routes should be advertised to the internet
type BgpRoutingProtocolRequestAllOfExportPolicy string

// List of BgpRoutingProtocolRequest_allOf_exportPolicy
const (
	BGPROUTINGPROTOCOLREQUESTALLOFEXPORTPOLICY_FULL         BgpRoutingProtocolRequestAllOfExportPolicy = "FULL"
	BGPROUTINGPROTOCOLREQUESTALLOFEXPORTPOLICY_DEFAULT      BgpRoutingProtocolRequestAllOfExportPolicy = "DEFAULT"
	BGPROUTINGPROTOCOLREQUESTALLOFEXPORTPOLICY_FULL_DEFAULT BgpRoutingProtocolRequestAllOfExportPolicy = "FULL_DEFAULT"
	BGPROUTINGPROTOCOLREQUESTALLOFEXPORTPOLICY_PARTIAL      BgpRoutingProtocolRequestAllOfExportPolicy = "PARTIAL"
)

// All allowed values of BgpRoutingProtocolRequestAllOfExportPolicy enum
var AllowedBgpRoutingProtocolRequestAllOfExportPolicyEnumValues = []BgpRoutingProtocolRequestAllOfExportPolicy{
	"FULL",
	"DEFAULT",
	"FULL_DEFAULT",
	"PARTIAL",
}

func (v *BgpRoutingProtocolRequestAllOfExportPolicy) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BgpRoutingProtocolRequestAllOfExportPolicy(value)
	for _, existing := range AllowedBgpRoutingProtocolRequestAllOfExportPolicyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BgpRoutingProtocolRequestAllOfExportPolicy", value)
}

// NewBgpRoutingProtocolRequestAllOfExportPolicyFromValue returns a pointer to a valid BgpRoutingProtocolRequestAllOfExportPolicy
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBgpRoutingProtocolRequestAllOfExportPolicyFromValue(v string) (*BgpRoutingProtocolRequestAllOfExportPolicy, error) {
	ev := BgpRoutingProtocolRequestAllOfExportPolicy(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BgpRoutingProtocolRequestAllOfExportPolicy: valid values are %v", v, AllowedBgpRoutingProtocolRequestAllOfExportPolicyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BgpRoutingProtocolRequestAllOfExportPolicy) IsValid() bool {
	for _, existing := range AllowedBgpRoutingProtocolRequestAllOfExportPolicyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BgpRoutingProtocolRequest_allOf_exportPolicy value
func (v BgpRoutingProtocolRequestAllOfExportPolicy) Ptr() *BgpRoutingProtocolRequestAllOfExportPolicy {
	return &v
}

type NullableBgpRoutingProtocolRequestAllOfExportPolicy struct {
	value *BgpRoutingProtocolRequestAllOfExportPolicy
	isSet bool
}

func (v NullableBgpRoutingProtocolRequestAllOfExportPolicy) Get() *BgpRoutingProtocolRequestAllOfExportPolicy {
	return v.value
}

func (v *NullableBgpRoutingProtocolRequestAllOfExportPolicy) Set(val *BgpRoutingProtocolRequestAllOfExportPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRoutingProtocolRequestAllOfExportPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRoutingProtocolRequestAllOfExportPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRoutingProtocolRequestAllOfExportPolicy(val *BgpRoutingProtocolRequestAllOfExportPolicy) *NullableBgpRoutingProtocolRequestAllOfExportPolicy {
	return &NullableBgpRoutingProtocolRequestAllOfExportPolicy{value: val, isSet: true}
}

func (v NullableBgpRoutingProtocolRequestAllOfExportPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRoutingProtocolRequestAllOfExportPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

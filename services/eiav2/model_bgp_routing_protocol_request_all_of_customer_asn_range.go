/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

API version: 2.0
Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// BgpRoutingProtocolRequestAllOfCustomerAsnRange Customer Autonomous System Number range
type BgpRoutingProtocolRequestAllOfCustomerAsnRange string

// List of BgpRoutingProtocolRequest_allOf_customerAsnRange
const (
	BGPROUTINGPROTOCOLREQUESTALLOFCUSTOMERASNRANGE__16 BgpRoutingProtocolRequestAllOfCustomerAsnRange = "BITS_16"
	BGPROUTINGPROTOCOLREQUESTALLOFCUSTOMERASNRANGE__32 BgpRoutingProtocolRequestAllOfCustomerAsnRange = "BITS_32"
)

// All allowed values of BgpRoutingProtocolRequestAllOfCustomerAsnRange enum
var AllowedBgpRoutingProtocolRequestAllOfCustomerAsnRangeEnumValues = []BgpRoutingProtocolRequestAllOfCustomerAsnRange{
	"BITS_16",
	"BITS_32",
}

func (v *BgpRoutingProtocolRequestAllOfCustomerAsnRange) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BgpRoutingProtocolRequestAllOfCustomerAsnRange(value)
	for _, existing := range AllowedBgpRoutingProtocolRequestAllOfCustomerAsnRangeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BgpRoutingProtocolRequestAllOfCustomerAsnRange", value)
}

// NewBgpRoutingProtocolRequestAllOfCustomerAsnRangeFromValue returns a pointer to a valid BgpRoutingProtocolRequestAllOfCustomerAsnRange
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBgpRoutingProtocolRequestAllOfCustomerAsnRangeFromValue(v string) (*BgpRoutingProtocolRequestAllOfCustomerAsnRange, error) {
	ev := BgpRoutingProtocolRequestAllOfCustomerAsnRange(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BgpRoutingProtocolRequestAllOfCustomerAsnRange: valid values are %v", v, AllowedBgpRoutingProtocolRequestAllOfCustomerAsnRangeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BgpRoutingProtocolRequestAllOfCustomerAsnRange) IsValid() bool {
	for _, existing := range AllowedBgpRoutingProtocolRequestAllOfCustomerAsnRangeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BgpRoutingProtocolRequest_allOf_customerAsnRange value
func (v BgpRoutingProtocolRequestAllOfCustomerAsnRange) Ptr() *BgpRoutingProtocolRequestAllOfCustomerAsnRange {
	return &v
}

type NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange struct {
	value *BgpRoutingProtocolRequestAllOfCustomerAsnRange
	isSet bool
}

func (v NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) Get() *BgpRoutingProtocolRequestAllOfCustomerAsnRange {
	return v.value
}

func (v *NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) Set(val *BgpRoutingProtocolRequestAllOfCustomerAsnRange) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpRoutingProtocolRequestAllOfCustomerAsnRange(val *BgpRoutingProtocolRequestAllOfCustomerAsnRange) *NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange {
	return &NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange{value: val, isSet: true}
}

func (v NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpRoutingProtocolRequestAllOfCustomerAsnRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

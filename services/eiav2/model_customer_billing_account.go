/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the CustomerBillingAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerBillingAccount{}

// CustomerBillingAccount struct for CustomerBillingAccount
type CustomerBillingAccount struct {
	// Billing account number
	AccountNumber        string `json:"accountNumber"`
	AdditionalProperties map[string]interface{}
}

type _CustomerBillingAccount CustomerBillingAccount

// NewCustomerBillingAccount instantiates a new CustomerBillingAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerBillingAccount(accountNumber string) *CustomerBillingAccount {
	this := CustomerBillingAccount{}
	this.AccountNumber = accountNumber
	return &this
}

// NewCustomerBillingAccountWithDefaults instantiates a new CustomerBillingAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerBillingAccountWithDefaults() *CustomerBillingAccount {
	this := CustomerBillingAccount{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value
func (o *CustomerBillingAccount) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *CustomerBillingAccount) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *CustomerBillingAccount) SetAccountNumber(v string) {
	o.AccountNumber = v
}

func (o CustomerBillingAccount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerBillingAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accountNumber"] = o.AccountNumber

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CustomerBillingAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accountNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerBillingAccount := _CustomerBillingAccount{}

	err = json.Unmarshal(data, &varCustomerBillingAccount)

	if err != nil {
		return err
	}

	*o = CustomerBillingAccount(varCustomerBillingAccount)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accountNumber")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCustomerBillingAccount struct {
	value *CustomerBillingAccount
	isSet bool
}

func (v NullableCustomerBillingAccount) Get() *CustomerBillingAccount {
	return v.value
}

func (v *NullableCustomerBillingAccount) Set(val *CustomerBillingAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerBillingAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerBillingAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerBillingAccount(val *CustomerBillingAccount) *NullableCustomerBillingAccount {
	return &NullableCustomerBillingAccount{value: val, isSet: true}
}

func (v NullableCustomerBillingAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerBillingAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

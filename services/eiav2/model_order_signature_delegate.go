/*
Equinix Internet Access API

Equinix Internet Access provides direct access to the Internet with scalable bandwidth options in IBX data centers.

Contact: api-support@equinix.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eiav2

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderSignatureDelegate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderSignatureDelegate{}

// OrderSignatureDelegate struct for OrderSignatureDelegate
type OrderSignatureDelegate struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	// Email address that the signature request should be sent to in case of DELEGATE signature
	Email                string `json:"email"`
	AdditionalProperties map[string]interface{}
}

type _OrderSignatureDelegate OrderSignatureDelegate

// NewOrderSignatureDelegate instantiates a new OrderSignatureDelegate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderSignatureDelegate(email string) *OrderSignatureDelegate {
	this := OrderSignatureDelegate{}
	this.Email = email
	return &this
}

// NewOrderSignatureDelegateWithDefaults instantiates a new OrderSignatureDelegate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderSignatureDelegateWithDefaults() *OrderSignatureDelegate {
	this := OrderSignatureDelegate{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *OrderSignatureDelegate) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSignatureDelegate) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *OrderSignatureDelegate) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *OrderSignatureDelegate) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *OrderSignatureDelegate) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderSignatureDelegate) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *OrderSignatureDelegate) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *OrderSignatureDelegate) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value
func (o *OrderSignatureDelegate) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *OrderSignatureDelegate) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *OrderSignatureDelegate) SetEmail(v string) {
	o.Email = v
}

func (o OrderSignatureDelegate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderSignatureDelegate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	toSerialize["email"] = o.Email

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderSignatureDelegate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderSignatureDelegate := _OrderSignatureDelegate{}

	err = json.Unmarshal(data, &varOrderSignatureDelegate)

	if err != nil {
		return err
	}

	*o = OrderSignatureDelegate(varOrderSignatureDelegate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "firstName")
		delete(additionalProperties, "lastName")
		delete(additionalProperties, "email")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderSignatureDelegate struct {
	value *OrderSignatureDelegate
	isSet bool
}

func (v NullableOrderSignatureDelegate) Get() *OrderSignatureDelegate {
	return v.value
}

func (v *NullableOrderSignatureDelegate) Set(val *OrderSignatureDelegate) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderSignatureDelegate) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderSignatureDelegate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderSignatureDelegate(val *OrderSignatureDelegate) *NullableOrderSignatureDelegate {
	return &NullableOrderSignatureDelegate{value: val, isSet: true}
}

func (v NullableOrderSignatureDelegate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderSignatureDelegate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
